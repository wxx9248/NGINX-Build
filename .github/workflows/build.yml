name: build
on:
  push:
    branches:
      - master
      - development
  workflow_dispatch: null
jobs:
  build-ubuntu-2004-amd64:
    runs-on: ubuntu-20.04
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install GCC
        uses: egor-tensin/setup-gcc@v1
      - name: Install libgd
        run: |
          sudo apt remove -y libgd3 nginx
          sudo apt install -y libgd-dev
      - name: Install libgeoip
        run: |
          sudo apt install -y libgeoip-dev
      - name: Configure nginx
        run: >
          cd nginx;
          ./auto/configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-http_geoip_module --with-http_flv_module --with-http_image_filter_module --with-http_mp4_module --with-stream_geoip_module --add-module=../ngx_brotli --add-module=../ngx-fancyindex --add-module=../nginx-http-auth-digest --add-module=../njs/nginx --add-module=../nginx-rtmp-module --with-openssl=../libressl --with-pcre=../pcre2 --with-zlib=../zlib --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie';
          cd ..;
      - name: Configure pcre2
        run: |
          cd pcre2;
          ./autogen.sh;
          cd ..;
      - name: Configure libressl
        run: |
          cd libressl;
          ./autogen.sh;
          cd ..;
      - name: Compile nginx
        run: |
          cd nginx;
          make -j$(nproc);
          cd ..;
      - name: Strip binary
        run: |
          strip --strip-unneeded nginx/objs/nginx;
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'nginx-ubuntu-2004-amd64-${{github.sha}}'
          path: nginx/objs/nginx

  build-ubuntu-2004-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run build script in the container
        uses: uraimo/run-on-arch-action@v2.2.0
        with:
          arch: aarch64
          distro: ubuntu20.04
          dockerRunArgs: |
            --volume "${PWD}:/workspace"
          shell: /bin/bash
          install: |
            yes | unminimize
            apt update -y;
            apt upgrade -y;
            apt install -y build-essential binutils diffutils git libgd-dev libgeoip-dev libtool gawk;
          run: >
            cd /workspace;
            
            cd nginx;
            ./auto/configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-http_geoip_module --with-http_flv_module --with-http_image_filter_module --with-http_mp4_module --with-stream_geoip_module --add-module=../ngx_brotli --add-module=../ngx-fancyindex --add-module=../nginx-http-auth-digest --add-module=../njs/nginx --add-module=../nginx-rtmp-module --with-openssl=../libressl --with-pcre=../pcre2 --with-zlib=../zlib --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie';
            cd ..;

            cd pcre2;
            ./autogen.sh;
            cd ..;
            
            cd libressl;
            ./autogen.sh;
            cd ..;

            cd nginx;
            make -j$(nproc);
            cd ..;

            strip --strip-unneeded nginx/objs/nginx;
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'nginx-ubuntu-2004-arm64-${{github.sha}}'
          path: nginx/objs/nginx

  build-ubuntu-2204-amd64:
    runs-on: ubuntu-22.04
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install GCC
        uses: egor-tensin/setup-gcc@v1
      - name: Install libgd
        run: |
          sudo apt remove -y libgd3 nginx
          sudo apt install -y libgd-dev
      - name: Install libgeoip
        run: |
          sudo apt install -y libgeoip-dev
      - name: Configure nginx
        run: >
          cd nginx;
          ./auto/configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-http_geoip_module --with-http_flv_module --with-http_image_filter_module --with-http_mp4_module --with-stream_geoip_module --add-module=../ngx_brotli --add-module=../ngx-fancyindex --add-module=../nginx-http-auth-digest --add-module=../njs/nginx --add-module=../nginx-rtmp-module --with-openssl=../libressl --with-pcre=../pcre2 --with-zlib=../zlib --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie';
          cd ..;
      - name: Configure pcre2
        run: |
          cd pcre2;
          ./autogen.sh;
          cd ..;
      - name: Configure libressl
        run: |
          cd libressl;
          ./autogen.sh;
          cd ..;
      - name: Compile nginx
        run: |
          cd nginx;
          make -j$(nproc);
          cd ..;
      - name: Strip binary
        run: |
          strip --strip-unneeded nginx/objs/nginx;
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'nginx-ubuntu-2204-amd64-${{github.sha}}'
          path: nginx/objs/nginx

  build-ubuntu-2204-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run build script in the container
        uses: uraimo/run-on-arch-action@v2.2.0
        with:
          arch: aarch64
          distro: ubuntu22.04
          dockerRunArgs: |
            --volume "${PWD}:/workspace"
          shell: /bin/bash
          install: |
            yes | unminimize
            apt update -y;
            apt upgrade -y;
            apt install -y build-essential binutils diffutils git libgd-dev libgeoip-dev libtool gawk;
          run: >
            cd /workspace;

            cd nginx;
            ./auto/configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-http_geoip_module --with-http_flv_module --with-http_image_filter_module --with-http_mp4_module --with-stream_geoip_module --add-module=../ngx_brotli --add-module=../ngx-fancyindex --add-module=../nginx-http-auth-digest --add-module=../njs/nginx --add-module=../nginx-rtmp-module --with-openssl=../libressl --with-pcre=../pcre2 --with-zlib=../zlib --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie';
            cd ..;

            cd pcre2;
            ./autogen.sh;
            cd ..;

            cd libressl;
            ./autogen.sh;
            cd ..;

            cd nginx;
            make -j$(nproc);
            cd ..;

            strip --strip-unneeded nginx/objs/nginx;
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'nginx-ubuntu-2204-arm64-${{github.sha}}'
          path: nginx/objs/nginx

  build-archlinux-latest-amd64:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Update system
        run: |
          pacman -Syyu --noconfirm
      - name: Install essential tools
        run: |
          pacman -S --noconfirm git python perl diffutils
      - name: Install GCC toolchain
        run: |
          pacman -S --noconfirm base-devel
      - name: Install libgd
        run: |
          pacman -S --noconfirm gd
      - name: Install libgeoip
        run: |
          pacman -S --noconfirm geoip
      - name: Install libtool
        run: |
          pacman -S --noconfirm libtool
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure nginx
        run: >
          cd nginx;
          ./auto/configure --prefix=/etc/nginx --conf-path=/etc/nginx/nginx.conf --sbin-path=/usr/bin/nginx --pid-path=/run/nginx.pid --lock-path=/run/lock/nginx.lock --user=http --group=http --http-log-path=/var/log/nginx/access.log --error-log-path=stderr --http-client-body-temp-path=/var/lib/nginx/client_body --http-proxy-temp-path=/var/lib/nginx/proxy --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-cc-opt='-march=x86-64 -mtune=generic -O2 -pipe -fno-plt -fexceptions -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-clash-protection -fcf-protection -flto' --with-ld-opt='-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -flto' --with-compat --with-debug --with-file-aio --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module  --with-http_flv_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-pcre-jit --with-stream --with-stream_geoip_module --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads --modules-path=/usr/lib/nginx/modules --with-http_image_filter_module --with-http_random_index_module --add-module=../ngx_brotli --add-module=../ngx-fancyindex --add-module=../nginx-http-auth-digest --add-module=../njs/nginx --add-module=../nginx-rtmp-module --with-openssl=../libressl --with-pcre=../pcre2 --with-zlib=../zlib;
          cd ..;
      - name: Configure pcre2
        run: |
          cd pcre2;
          ./autogen.sh;
          cd ..;
      - name: Configure libressl
        run: |
          cd libressl;
          ./autogen.sh;
          cd ..;
      - name: Compile nginx
        run: |
          cd nginx;
          make -j$(nproc);
          cd ..;
      - name: Strip binary
        run: |
          strip --strip-unneeded nginx/objs/nginx;
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'nginx-archlinux-latest-amd64-${{github.sha}}'
          path: nginx/objs/nginx

  build-archlinux-latest-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Run build script in the container
        uses: uraimo/run-on-arch-action@v2.2.0
        with:
          arch: aarch64
          distro: archarm_latest
          dockerRunArgs: |
            --volume "${PWD}:/workspace"
          shell: /bin/bash
          install: |
            pacman -Syyu --noconfirm
            pacman -S --noconfirm git python perl diffutils base-devel gd geoip libtool netcat
          run: >
            cd /workspace;

            cd nginx;
            ./auto/configure --prefix=/etc/nginx --conf-path=/etc/nginx/nginx.conf --sbin-path=/usr/bin/nginx --pid-path=/run/nginx.pid --lock-path=/run/lock/nginx.lock --user=http --group=http --http-log-path=/var/log/nginx/access.log --error-log-path=stderr --http-client-body-temp-path=/var/lib/nginx/client_body --http-proxy-temp-path=/var/lib/nginx/proxy --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --http-scgi-temp-path=/var/lib/nginx/scgi --http-uwsgi-temp-path=/var/lib/nginx/uwsgi --with-cc-opt='-march=armv8-a -O2 -pipe -fstack-protector-strong -fno-plt -D_FORTIFY_SOURCE=2' --with-ld-opt=-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now --with-compat --with-debug --with-file-aio --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module  --with-http_flv_module --with-http_geoip_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-pcre-jit --with-stream --with-stream_geoip_module --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads --modules-path=/usr/lib/nginx/modules --with-http_image_filter_module --with-http_random_index_module --add-module=../ngx_brotli --add-module=../ngx-fancyindex --add-module=../nginx-http-auth-digest --add-module=../njs/nginx --add-module=../nginx-rtmp-module --with-openssl=../libressl --with-pcre=../pcre2 --with-zlib=../zlib;
            cd ..;

            cd pcre2;
            ./autogen.sh;
            cd ..;

            cd libressl;
            ./autogen.sh;
            cd ..;

            cd nginx;
            make -j$(nproc);
            cd ..;

            strip --strip-unneeded nginx/objs/nginx;
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'nginx-archlinux-latest-arm64-${{github.sha}}'
          path: nginx/objs/nginx
  
  build-macos-latest-amd64:
    runs-on: macos-12
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Homebrew
        run: >
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Install essential build tools
        run: >
          brew install automake
      - name: Install libgd
        run: >
          brew install libgd
      - name: Install libgeoip
        run: >
          brew install libgeoip
      - name: Configure nginx
        run: >
          cd nginx;
          NGINX_VERSION=$(git show -s --format=%s | sed -n 's/nginx\-\(.*\)\-RELEASE/\1/p');
          ./auto/configure --prefix=/usr/local/Cellar/nginx/$NGINX_VERSION --sbin-path=/usr/local/Cellar/nginx/$NGINX_VERSION/bin/nginx --conf-path=/usr/local/etc/nginx/nginx.conf --pid-path=/usr/local/var/run/nginx.pid --lock-path=/usr/local/var/run/nginx.lock --http-client-body-temp-path=/usr/local/var/run/nginx/client_body_temp --http-proxy-temp-path=/usr/local/var/run/nginx/proxy_temp --http-fastcgi-temp-path=/usr/local/var/run/nginx/fastcgi_temp --http-uwsgi-temp-path=/usr/local/var/run/nginx/uwsgi_temp --http-scgi-temp-path=/usr/local/var/run/nginx/scgi_temp --http-log-path=/usr/local/var/log/nginx/access.log --error-log-path=/usr/local/var/log/nginx/error.log --with-compat --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-http_geoip_module --with-http_flv_module --with-http_image_filter_module --with-http_mp4_module --with-stream_geoip_module --add-module=../ngx_brotli --add-module=../ngx-fancyindex --add-module=../nginx-http-auth-digest --add-module=../njs/nginx --add-module=../nginx-rtmp-module --with-openssl=../libressl --with-pcre=../pcre2 --with-zlib=../zlib --with-cc-opt='-I/usr/local/opt/libgeoip/include -I/usr/local/opt/libgd/include' --with-ld-opt='-L/usr/local/opt/libgeoip/lib -L/usr/local/opt/libgd/lib';
          cd ..;
      - name: Configure pcre2
        run: |
          cd pcre2;
          ./autogen.sh;
          cd ..;
      - name: Configure libressl
        run: |
          cd libressl;
          ./autogen.sh;
          cd ..;
      - name: Compile nginx
        run: |
          cd nginx;
          make -j$(nproc);
          cd ..;
      - name: Strip binary
        run: |
          strip nginx/objs/nginx;
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'nginx-macos-latest-amd64-${{github.sha}}'
          path: nginx/objs/nginx
  release:
    needs:
      - build-ubuntu-2004-amd64
      - build-ubuntu-2004-arm64
      - build-ubuntu-2204-amd64
      - build-ubuntu-2204-arm64
      - build-archlinux-latest-amd64
      - build-archlinux-latest-arm64
      - build-macos-latest-amd64
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/
      - name: Gathering artifacts
        run: >
          cd artifacts;
          for NAME in *;
          do
              cp $NAME/nginx ../$NAME;
          done;
          cd ..;
          rm -rf artifacts;
      - name: Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          automatic_release_tag: latest
          files: |
            *

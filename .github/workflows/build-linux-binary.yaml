name: Build Linux Binary
on:
  workflow_call:
    inputs:
      distro:
        required: true
        type: string
      arch:
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-linux-binary:
    runs-on: ubuntu-latest
    env:
      BUILD_DISTRO: ${{ inputs.distro }}
      BUILD_ARCH: ${{ inputs.arch }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Applying patches
        run: |
          bash ./patches/apply.sh
      - name: Remove old Docker
        run: |
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do
            sudo apt-get remove $pkg
          done
      - name: Install Docker Official Repository
        run: |
          # Add Docker's official GPG key:
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
      - name: Install Docker
        run: |
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.2.0
      - name: Setup Python and pip
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
      - name: Setup Python dependencies
        run: |
          pip3 install -r ./script/linux/requirements.txt
      - name: Running build script
        run: |
          python3 ./script/linux/main.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nginx-${{ inputs.distro }}-${{ inputs.arch }}
          path: ./workspace/nginx/objs/nginx
